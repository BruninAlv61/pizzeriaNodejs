{{#contentFor "styles"}}
  <link rel="stylesheet" href="/css/manage-form.css">
  <link rel="stylesheet" href="/css/manage-table.css">
{{/contentFor}}

<main class="main">
  <h1 class="main-title">Editing "<span>{{combo_offer.combo_offers_name}}</span>"</h1>

  <form class="main-form" id="editForm">
    <input type="hidden" name="combo_offers_id" value="{{combo_offer.combo_offers_id}}" />

    <label for="combo_offers_name">Name</label>
    <input type="text" id="combo_offers_name" name="combo_offers_name" value="{{combo_offer.combo_offers_name}}" required />

    <label for="combo_offers_description">Description</label>
    <textarea id="combo_offers_description" name="combo_offers_description" required>{{combo_offer.combo_offers_description}}</textarea>

    <label for="combo_offers_price">Price</label>
    <input type="number" step="0.01" id="combo_offers_price" name="combo_offers_price" value="{{combo_offer.combo_offers_price}}" required />

    <label for="combo_offers_image">Image URL</label>
    <input type="url" id="combo_offers_image" name="combo_offers_image" value="{{combo_offer.combo_offers_image}}" required />

    <label for="product_selector">Edit Products in Combo</label>
    <select id="product_selector">
      <option value="">Select a product</option>
      {{#each products}}
        <option value="{{product_id}}" data-name="{{product_name}}">{{product_name}}</option>
      {{/each}}
    </select>

    <input type="number" id="product_quantity" placeholder="Quantity" min="1" />
    <button type="button" id="add_product_btn">Add Product</button>

    <div id="product_list" class="product-tags">
      <!-- Render pre-selected products -->
      {{#each combo_offer_menu}}
        <div class="product-tag" data-id="{{product_id}}">
          <span>{{lookup ../product_names product_id}} x {{quantity}}</span>
          <button type="button" onclick="removeProductById('{{product_id}}')">×</button>
        </div>
      {{/each}}
    </div>

    <input type="hidden" name="combo_offer_menu" id="combo_offer_menu" />

    <button type="submit">Save Changes</button>
  </form>
</main>

<script>
  const form = document.getElementById('editForm');
  const productSelector = document.getElementById('product_selector');
  const quantityInput = document.getElementById('product_quantity');
  const addBtn = document.getElementById('add_product_btn');
  const productList = document.getElementById('product_list');
  const comboOfferMenuInput = document.getElementById('combo_offer_menu');

  let selectedProducts = {{@json combo_offer_menu}};

  addBtn.addEventListener('click', () => {
    const productId = productSelector.value;
    const productName = productSelector.options[productSelector.selectedIndex]?.dataset?.name;
    const quantity = parseInt(quantityInput.value);

    if (!productId || !quantity || quantity < 1) return;

    const existing = selectedProducts.find(p => p.product_id === productId);
    if (existing) {
      existing.quantity += quantity;
    } else {
      selectedProducts.push({ product_id: productId, quantity });
    }

    renderProductList();
    updateHiddenInput();
  });

  function renderProductList() {
    productList.innerHTML = '';
    selectedProducts.forEach((p) => {
      const productName = productSelector.querySelector(`option[value="${p.product_id}"]`)?.text || 'Unnamed';
      const tag = document.createElement('div');
      tag.className = 'product-tag';
      tag.dataset.id = p.product_id;
      tag.innerHTML = `
        <span>${productName} x ${p.quantity}</span>
        <button type="button" onclick="removeProductById('${p.product_id}')">×</button>
      `;
      productList.appendChild(tag);
    });
  }

  function removeProductById(id) {
    selectedProducts = selectedProducts.filter(p => p.product_id !== id);
    renderProductList();
    updateHiddenInput();
  }

  function updateHiddenInput() {
    comboOfferMenuInput.value = JSON.stringify(selectedProducts);
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const combo_offers_id = formData.get('combo_offers_id');

    const data = {
      combo_offers_name: formData.get('combo_offers_name'),
      combo_offers_description: formData.get('combo_offers_description'),
      combo_offers_price: formData.get('combo_offers_price'),
      combo_offers_image: formData.get('combo_offers_image'),
      combo_offer_menu: selectedProducts
    };

    await fetch(`/combo-offers/${combo_offers_id}`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });

    window.location.href = '/combo-offers';
  });

  renderProductList();
  updateHiddenInput();
</script>
